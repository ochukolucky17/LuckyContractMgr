// <auto-generated />
using System;
using LuckyContractMgr.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LuckyContractMgr.Migrations
{
    [DbContext(typeof(ContractContext))]
    [Migration("20210208165116_Login_Seed")]
    partial class Login_Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("LuckyContractMgr.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ContractExecutedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractTerminateOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFQNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopeOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminationTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractExecutedOn = new DateTime(2021, 2, 8, 17, 51, 15, 95, DateTimeKind.Local).AddTicks(1058),
                            ContractTerminateOn = new DateTime(2021, 2, 8, 17, 51, 15, 96, DateTimeKind.Local).AddTicks(3405),
                            PONumber = "PO00234",
                            PaymentTerms = "Time is the indefinite continued progress of existence and events that occur in an apparently irreversible succession from the past, through the present, into the future.",
                            RFQNumber = "RFQ000ZHRS",
                            ScopeOfWork = "Time is the indefinite continued progress of existence and events that occur in an apparently irreversible succession from the past, through the present, into the future.",
                            TerminationTerms = "Time is the indefinite continued progress of existence and events that occur in an apparently irreversible succession from the past, through the present, into the future.",
                            VendorCompanyName = "Ochukwu Ltd",
                            VendorContactPerson = "Lucky"
                        },
                        new
                        {
                            Id = 2,
                            ContractExecutedOn = new DateTime(2021, 2, 8, 17, 51, 15, 96, DateTimeKind.Local).AddTicks(3985),
                            ContractTerminateOn = new DateTime(2021, 2, 8, 17, 51, 15, 96, DateTimeKind.Local).AddTicks(3989),
                            PONumber = "PO00834",
                            PaymentTerms = "Time is the indefinite continued progress of existence and events that occur in an apparently irreversible succession from the past, through the present, into the future.",
                            RFQNumber = "RFQ00KHGS",
                            ScopeOfWork = "Time is the indefinite continued progress of existence and events that occur in an apparently irreversible succession from the past, through the present, into the future.",
                            TerminationTerms = "Time is the indefinite continued progress of existence and events that occur in an apparently irreversible succession from the past, through the present, into the future.",
                            VendorCompanyName = "KK LImited",
                            VendorContactPerson = "Lucky"
                        });
                });

            modelBuilder.Entity("LuckyContractMgr.Models.LoginModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "Lucky@ContractManager.com",
                            FullName = "Lucky Okorodiden",
                            Password = "Lucky@123",
                            Telephone = "081487282912",
                            UserName = "Lucky1"
                        },
                        new
                        {
                            Id = 2,
                            EmailAddress = "Lucky@ContractManager.com",
                            FullName = "Lucky Okorodiden",
                            Password = "Lucky@123",
                            Telephone = "081487282912",
                            UserName = "Lucky2"
                        },
                        new
                        {
                            Id = 3,
                            EmailAddress = "Lucky@ContractManager.com",
                            FullName = "Lucky Okorodiden",
                            Password = "Lucky@123",
                            Telephone = "081487282912",
                            UserName = "Lucky3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
